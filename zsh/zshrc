# Path to your oh-my-zsh installation.
export ZSH=/Users/Matt/.oh-my-zsh

# Set name of the theme to load.
ZSH_THEME="robbyrussell"

plugins=()

################################################
## ALIASES
################################################

# for full list of aliases, run 'alias'

# general
alias zshconf="emacs ~/.zshrc && source ~/.zshrc"
alias zshrc="zshconf"
alias drp="cd ~/Dropbox"
alias startserver="sudo python -m SimpleHTTPServer 80"
alias edlab='ssh -X -l mgmcnally elnux.cs.umass.edu'
alias l='clear && ls'
alias dotfiles='cd ~/Dropbox/dotfiles'
alias jn='jupyter notebook'

# first arg filename
# second arg printer name
# moves file to edlab machine, sets default printer to printer given
# prints file given as arg, then deletes it from edlab machine
# TODO -- currently doesn't work with filenames that have spaces
# -
printedlab() {
    # unset username &> /dev/null
    # unset filename &> /dev/null
    local copies=1

    # Parse params
    for i in "$@"
    do
	case $i in
	    -u=*|--username=*)
		local username="${i#*=}"
		shift # past argument=value
		;;
	    -f=*|--filename=*)
		local filename="${i#*=}"
		shift # past argument=value
		;;
	    -p=*|--printer=*)
		local printer="${i#*=}"
		shift # past argument=value
		;;
	    -c=*|--copies=*)
		copies="${i#*=}"
		shift # past argument=value
		;;
	    --default)
		default=YES
		shift # past argument with no value
		;;
	    *)
		# unknown option
		# echo "bad"
		# return 1
		;;
	esac
    done
    # echo $username
    # echo $filename
    # echo $printer

    local num_tries=3
    local tries=$num_tries
    # Check if edlab can be accessed w/o passwork (aka public key authorized)
    # Try to set up num_tries times
    while (( $tries > 0 )) && ! ssh -o PasswordAuthentication=no mgmcnally@elnux.cs.umass.edu exit &>/dev/null ; do
	
	# need to set up public key
	if ((tries == 2)) ; then
	    echo "Need to set up public key login in with no password"
	    echo "setting up public key transfer..."
	fi
	echo ""
	echo "please enter password below to set up public key on edlab machines"
	tries=$((tries - 1))
	ssh-copy-id mgmcnally@elnux.cs.umass.edu &> /dev/null
    done

    # Failed to set up public key
    if ((tries <= 0)) ; then
	echo "Public key setup failed :/"
	return 1
    fi

    # Successfully set up public key
    if ((tries < ${num_tries})) ; then
	echo "Public key setup finished!"
    fi

    # Ready to move file and print
    if ! scp ${filename} ${username}@elnux.cs.umass.edu:~/ ; then
	echo "ERROR: File transfer failed" 1>&2
	return 1
    fi

    echo "printing to \"${printer}\" and then deleting file"
    if ! ssh -l ${username} elnux.cs.umass.edu "lpoptions -d \"${printer}\" > /dev/null;" ; then
	ssh -l ${username} elnux.cs.umass.edu "rm \"${filename}\";" > /dev/null
	echo "ERROR: failed to set printer"
	return 1
    fi
    
    if ! ssh -l ${username} elnux.cs.umass.edu "lp -q 1 -s -n ${copies} \"${filename}\";" ; then
	ssh -l ${username} elnux.cs.umass.edu "rm \"${filename}\";" > /dev/null
	echo "ERROR: failed to print"
	return 1;
    fi

    # not critical if this fails
    ssh -l ${username} elnux.cs.umass.edu "rm \"${filename}\";" > /dev/null
}

# prints file in lederle 223
printlederle() {
    printedlab --username=mgmcnally --printer=elprt1_single $@
}

# prints in cs building uspace
printcs() {
    printedlab --username=mgmcnally --printer=ugprt_single $@
}

# prints in cs building uspace
printcs_double() {
    printedlab $1 ugprt
}

# emacs
alias econf='emacs ~/.emacs.d/init.el'
alias e='emacsclient -t -a ""'
alias killemacs='emacsclient --eval "(progn (save-some-buffers t t) (kill-emacs))"'

# classes
alias 589="cd ~/Dropbox/Machine\ Learning"
alias ml="cd ~/Dropbox/Machine\ Learning"
alias systems="cd ~/Dropbox/Systems"
alias 630="cd ~/Dropbox/Systems"

# tmux
alias tm="tmux attach || tmux new"
alias tconf="emacs ~/.tmux.conf"
alias tka="killall tmux"
alias tls="tmux ls"
alias ta="tmux attach"
alias td="tmux detach"

# brew
alias bubu='brew update && brew outdated && brew upgrade && brew cleanup'

# git
alias gs="git status"
alias ga="git add"
alias gaa="git add --all"
alias gp="git push"
alias gc="git commit -m"
alias glog="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gdeleteall="git stash save --keep-index --include-untracked && git stash drop"


dots() {
    # copy current versions into dotfiles directory
    echo "copying..."
    echo ""
    # zsh config and oh-my-zsh custom folder
    cp ~/.zshrc ~/Dropbox/dotfiles/zsh/zshrc

    rm -r ~/Dropbox/dotfiles/zsh/custom
    cp -r ~/.oh-my-zsh/custom ~/Dropbox/dotfiles/zsh/custom

    # tmux config
    cp ~/.tmux.conf ~/Dropbox/dotfiles/tmux/tmux.conf

    # emacs config
    cp ~/.emacs.d/init.el ~/Dropbox/dotfiles/emacs/init.el

    # brew package list
    brew ls > ~/Dropbox/dotfiles/brew/brew_packages.txt

    # see if anything changed
    cd ~/Dropbox/dotfiles
    git status
    cd -
}


export PATH="/Users/matt/anaconda2/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/Matt/Documents/scala-2.11.2/bin:/usr/texbin:/Library/Tex/texbin"

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

source $ZSH/oh-my-zsh.sh

# You may need to manually set your language environment
export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
export EDITOR='emacs'

# OPAM configuration
. /Users/matt/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true


# make font smoothing less bold in terminal, run this once on new computers
# defaults write -g AppleFontSmoothing -int 1
# sudo defaults write -g AppleFontSmoothing -int 1
