############################################################################
#         MMP""MM""YMM `7MMM.     ,MMF'`7MMF'   `7MF'`YMM'   `MP'
#         P'   MM   `7   MMMb    dPMM    MM       M    VMb.  ,P
#              MM        M YM   ,M MM    MM       M     `MM.M'
#              MM        M  Mb  M' MM    MM       M       MMb
#              MM        M  YM.P'  MM    MM       M     ,M'`Mb.
#              MM        M  `YM'   MM    YM.     ,M    ,P   `MM.
#            .JMML.    .JML. `'  .JMML.   `bmmmmd"'  .MM:.  .:MMa.
############################################################################

# INTERESTING CHECKOUT: https://github.com/tony/tmux-config/blob/master/.tmux-osx.conf

############################################################################
# Global Options
############################################################################

# large history
set -g history-limit 10000

# utf8 support
set-window-option -g utf8 on

# set defualt shell to zsh
set-option -g default-shell /bin/zsh

# Automatically set window title
setw -g automatic-rename on

# renumber windows when one is deleted
set-option -g renumber-windows on

# Fast typing!
set-option -sg escape-time 1

# Key settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys emacs
set -g status-keys emacs
#set -g status on

# show activity
setw -g monitor-activity on
set -g visual-activity on

# window title
set-option -g set-titles on
set-option -g set-titles-string '#H:#W'

# additional-menu colors
setw -g mode-bg black
setw -g mode-fg white

# pane border colors
set-option -g pane-active-border-fg white
set-option -g pane-active-border-bg white

# global colors
# set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

# can use mouse to: select pane/window, resize pane, scroll
setw -g mouse on

# TODO -- make mouse toggle that's one key

# Start copy mode when scrolling up and exit when scrolling down to bottom.
# The "#{mouse_any_flag}" check just sends scrolls to any program running that
# has mouse support (like vim).
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# fixes problem when using `open` command inside tmux
# WARNING -- if reattach-to-user-namespace not installed,
#            tmux will exit immediately after opening
set -g default-command "reattach-to-user-namespace -l /bin/zsh"

# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session,
# even if both clients are looking at different windows.
# It seems that in this particular case, Screen has the better default
# where a window is only constrained in size if a smaller client
# is actively looking at it.
setw -g aggressive-resize on

############################################################################
# Status Bar
############################################################################
set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black
set-option -g status-fg white
set-option -g status-interval 4
set-option -g status-left-length 130
# battery needs to be downloaded:
# 	  brew tap Goles/battery
#	  brew install battery
set-option -g status-left '#(battery -t)   #[fg=cyan]#(date +"%-I:%M%p %b-%d")'
#   #[fg=blue]#(git branch 2>/dev/null | egrep "[*]" || echo "")'
set-option -g status-right ''

set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg black
#setw -g window-status-current-attr reverse
set-window-option -g window-status-format ' #I '
set-window-option -g window-status-current-format '#[fg=green][#[default]#I#[fg=green]]'

############################################################################
# Bindings & Unbindings
############################################################################

# rebind tmux prefix for commands
set -g prefix C-t

# reload tmux conf
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"

# split vertically
unbind %
bind-key v split-window -h -c '#{pane_current_path}'

# split horizontally
unbind '"'
bind-key b split-window -v -c '#{pane_current_path}'

# new window
unbind 'c'
bind c new-window -c "#{pane_current_path}"

# Navigation: use the vim motion keys to move between panes
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# pane selection
bind Left select-pane -L
bind Down select-pane -D
bind Up select-pane -U
bind Right select-pane -R

# Pane Resizing
bind-key -r H resize-pane -L
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -R

# Pane Maximizing [Don't switch windows between using these]
unbind <
bind < new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
unbind >
bind > last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

# in-scroll-mode commands
bind-key -t emacs-copy C-v page-down
bind-key -t emacs-copy C-f page-up

# Even out all panes in the current window
bind | select-layout "even-vertical"
bind _ select-layout "even-horizontal"
